[tool.poetry]
name = "Test fastapi app"
version = "0.1.0"
description = "Test app for demo"
authors = ["Aleksey Goncharov <vilmorq@gmail.com>"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.12"
fastapi = { version = "^0.115.6", extras=["all"] }
greenlet = "^3.1.1"
gunicorn = "^23.0.0"
sqlalchemy = "^2.0.36"
alembic = "^1.14.0"
asyncpg = "^0.30.0"
pydantic = "^2.10.3"
pydantic-settings = "^2.6.1"
python-dotenv = "^1.0.1"
uvicorn = "^0.32.1"
uvloop = "^0.21.0"
python-multipart = "^0.0.19"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "23.1.0"
ruff = "0.0.259"
pre-commit = "*"

[tool.poetry.group.debug]
optional = true

[tool.poetry.group.debug.dependencies]
debugpy = "^1.8.1"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-mock = "*"
pytest-env = "^1.1.3"
factory-boy = "^3.3.0"
pytest-asyncio = "^0.21"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)
'''

[tool.ruff]
line-length = 88
fix = true
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
# TODO: Update this  list, turn on everything except b008
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "F401",  # unused imports
    "F841",  # unused variables
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

target-version = "py312"

[tool.ruff.isort]
known-local-folder = ["app"]

[tool.pytest.ini_options]
log_format = "%(asctime)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"

[tool.pytest_env]